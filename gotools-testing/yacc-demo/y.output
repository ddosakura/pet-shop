
state 0
	$accept: .expr $end 

	NUM  shift 4
	.  error

	expr  goto 1
	expr2  goto 2
	expr1  goto 3

state 1
	$accept:  expr.$end 
	expr:  expr.ANS expr2 

	$end  accept
	ANS  shift 5
	.  error


state 2
	expr:  expr2.    (1)
	expr2:  expr2.OP2 expr1 

	OP2  shift 6
	.  reduce 1 (src line 18)


state 3
	expr2:  expr1.    (3)
	expr1:  expr1.OP1 NUM 

	OP1  shift 7
	.  reduce 3 (src line 20)


state 4
	expr1:  NUM.    (5)

	.  reduce 5 (src line 29)


state 5
	expr:  expr ANS.expr2 

	NUM  shift 4
	.  error

	expr2  goto 8
	expr1  goto 3

state 6
	expr2:  expr2 OP2.expr1 

	NUM  shift 4
	.  error

	expr1  goto 9

state 7
	expr1:  expr1 OP1.NUM 

	NUM  shift 10
	.  error


state 8
	expr:  expr ANS expr2.    (2)
	expr2:  expr2.OP2 expr1 

	OP2  shift 6
	.  reduce 2 (src line 18)


state 9
	expr2:  expr2 OP2 expr1.    (4)
	expr1:  expr1.OP1 NUM 

	OP1  shift 7
	.  reduce 4 (src line 21)


state 10
	expr1:  expr1 OP1 NUM.    (6)

	.  reduce 6 (src line 31)


7 terminals, 4 nonterminals
7 grammar rules, 11/8000 states
0 shift/reduce, 0 reduce/reduce conflicts reported
53 working sets used
memory: parser 5/120000
0 extra closures
9 shift entries, 1 exceptions
5 goto entries
1 entries saved by goto default
Optimizer space used: output 10/120000
10 table entries, 0 zero
maximum spread: 7, maximum offset: 7
